pipeline {
    agent any
    environment {
        DOCKER_PASS = credentials('docker_pass')
        SONAR_TOKEN = credentials('sonar_token')
    }
    stages {
        stage('Test'){
            agent { docker 'node:18-alpine3.16' }
            steps {
                sh 'npm install'
                sh 'npm run test'
            }
            post {
                always {
                    archiveArtifacts artifacts: 'test/report/report.html', followSymlinks: false
                }
            }
        }
        stage('Code Inspection'){
            steps {
                withSonarQubeEnv('SonarQube') {
                    sh '/var/jenkins_home/.sonar/sonar-scanner-4.7.0.2747-linux/bin/sonar-scanner  \
                    -Dsonar.organization=at20-devop         \
                    -Dsonar.projectKey=admission_service    \
                    -Dsonar.sources=src                     \
                    -Dsonar.host.url=https://sonarcloud.io  \
                    -Dsonar.javascript.lcov.reportPaths=coverage'
                }
            }
        }
        stage('Quality Gate'){
            steps {
               timeout(time: 1, unit: 'HOURS') {
                    // Parameter indicates whether to set pipeline to UNSTABLE if Quality Gate fails
                    // true = set pipeline to UNSTABLE, false = don't
                    waitForQualityGate abortPipeline: true
                }
            }
        }
        stage('Package') {
            steps {
                sh 'docker build -t at20_admission_service .'
            }
        }
        stage('Publish') {
           steps {
                sh 'docker login -u jhoelfloress -p ${DOCKER_PASS}'
                sh 'docker tag at20_admission_service jhoelfloress/admission_service'
                sh 'docker push jhoelfloress/admission_service'
           }
        }
    }
}