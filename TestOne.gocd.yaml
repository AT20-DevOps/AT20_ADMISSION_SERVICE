format_version: 10
pipelines:
  TestOne:
    group: AT20Group
    label_template: ${COUNT}
    lock_behavior: none
    display_order: -1
    environment_variables:
      GIT_COMMIT_HASH: 1.2
    secure_variables:
      SONAR_TOKEN: AES:YnrDUaQNfiG+DS1J7EJ1Rg==:eHEM3Cyt0C+z7Pyt0r1sImVI+Yz2kdEHnQOge1S+M8UUz0/f3mapDe5OCalFlJRl
      DOCKER_PASS: AES:8xVCUavUfqclI+ZWblL07A==:7Gy3ScVE6iA6/pFTCSO+cw==
    materials:
      git-5737a45:
        git: https://github.com/AT20-DevOps/AT20_ADMISSION_SERVICE.git
        username: esthervasquez
        shallow_clone: false
        auto_update: true
        branch: task14-evv
    stages:
    - Test:
        fetch_materials: true
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          unit-test:
            timeout: 0
            resources:
            - ubuntu
            tasks:
            - script: |
                git rev-parse --short HEAD > gitH.txt
                export GIT_COMMIT_HASH=$(cat gitH.txt)
                npm install
                npm run test
            artifacts:
            - build:
                source: test/report/report.html
                destination: html_report
            - build:
                source: Dockerfile
            - build:
                source: docker-compose-evv.yaml
            - build:
                source: gitH.txt
    - code-inspection:
        fetch_materials: false
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          sonar:
            timeout: 0
            resources:
            - ubuntu
            tasks:
            - script: |
                ls -la
                /godata/.sonar/sonar-scanner-4.7.0.2747-linux/bin/sonar-scanner \
                    -Dsonar.organization=at20-evv \
                    -Dsonar.projectKey=at20_evv \
                    -Dsonar.sources=. \
                    -Dsonar.host.url=https://sonarcloud.io
    - PackageandPublish:
        fetch_materials: false
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          docker:
            timeout: 0
            resources:
            - docker
            tasks:
            - fetch:
                is_file: false
                source: ./
                stage: Test
                job: unit-test
                run_if: passed
            - script: |
                export GIT_COMMIT_HASH=$(cat gitH.txt)
                docker build -t at20_admission_service .
                docker login -u esther12345 --password-stdin <<< ${DOCKER_PASS}
                docker tag at20_admission_service esther12345/admission_service:${GIT_COMMIT_HASH}
                docker push esther12345/admission_service:${GIT_COMMIT_HASH}
            artifacts:
            - build:
                source: docker-compose-evv.yaml

  Acceptance:
    group: AT20Group
    label_template: ${COUNT}
    lock_behavior: none
    display_order: -1
    environment_variables:
      GIT_COMMIT_HASH: 1.2
    materials:
      TestOne:
        pipeline: TestOne
        stage: PackageAndPublish
    stages:
    - DeployToDev:
        fetch_materials: false
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          deployToDev:
            timeout: 0
            resources:
            - docker
            tasks:
            - fetch:
                pipeline: TestOne
                stage: Test
                job: unit-test
                source: gitH.txt
                is_file: true
                run_if: passed
            - fetch: 
                pipeline: TestOne
                stage: PackageAndPublish
                job: docker
                source: docker-compose-evv.yaml
                is_file: true
                run_if: passed
            - script: |
                export GIT_COMMIT_HASH=$(cat gitH.txt)
                export TAG_VERSION=${GIT_COMMIT_HASH} && docker-compose -f docker-compose-evv.yaml up -dd
    - Smoke:
          fetch_materials: false
          keep_artifacts: false
          clean_workspace: false
          approval:
            type: success
            allow_only_on_success: false
          jobs:
            test:
              timeout: 0
              resources:
              - docker
              tasks:
              - script: |
                  echo command to run smoke test
  CapacityTesting:
      group: AT20Group
      label_template: ${COUNT}
      lock_behavior: none
      display_order: -1
      environment_variables:
        GIT_COMMIT_HASH: 1.2
        TARGET_HOST: 192.168.0.21
      materials:
        TestOne:
          pipeline: TestOne
          stage: PackageAndPublish
      stages:
      - DeployToAUTO:
          fetch_materials: false
          keep_artifacts: false
          clean_workspace: false
          approval:
            type: success
            allow_only_on_success: false
          jobs:
            deployToAUTO:
              timeout: 0
              resources:
              - docker
              tasks:
              - fetch:
                  pipeline: TestOne
                  stage: Test
                  job: unit-test
                  source: gitH.txt
                  is_file: true
                  run_if: passed
              - fetch:
                  pipeline: TestOne
                  stage: PackageAndPublish
                  job: docker
                  source: docker-compose-evv.yaml
                  is_file: true
                  run_if: passed
              - script: |
                  export GIT_COMMIT_HASH=$(cat gitH.txt)
                  export TAG_VERSION=${GIT_COMMIT_HASH} 
                  DOCKER_HOST=ssh://$TARGET_HOST docker-compose -f docker-compose-evv.yaml up -d